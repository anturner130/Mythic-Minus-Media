name: Update WAs and Release

on:
  schedule:
    - cron: '0 * * * *' # Runs every hour
  push:
    branches:
      - main
  workflow_dispatch:



jobs:
  update-and-release:
    runs-on: ubuntu-latest
    steps:

    - name: Install Token
      id: my-app
      uses: getsentry/action-github-app-token@v3.1
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key: ${{ secrets.APP_PRIVATE_KEY }}

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ steps.my-app.outputs.token }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r Scripts/requirements.txt


    - name: Run updateWAs.py
      run: python Scripts/updateWAs.py

    - name: Read commit notes
      id: read_commit_notes
      run: |
        COMMIT_NOTES=$(cat Scripts/Updates.txt)
        echo "commit_notes=$COMMIT_NOTES" >> $GITHUB_OUTPUT


    - name: Commit and push changes
      id: commit
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add .
        if git diff-index --quiet HEAD --; then
          echo "build_release=false" >> $GITHUB_OUTPUT
          echo "No changes detected. Exiting job."
          exit 0
        fi
        echo "build_release=true" >> $GITHUB_OUTPUT
        git commit -m "${{ steps.read_commit_notes.outputs.commit_notes }}"
        git push
        hash=$(git rev-parse HEAD)
        echo "hash=$hash" >> $GITHUB_OUTPUT

    - name: Get Latest Tag
      uses: actions-ecosystem/action-get-latest-tag@v1
      id: get-latest-tag
      
    - name: Increase Tag Version
      uses: actions-ecosystem/action-bump-semver@v1
      id: bump-semver
      with:
        current_version: ${{ steps.get-latest-tag.outputs.tag }}
        level: "patch"

    - name: Print Params
      id: print-pararms
      run: |
        echo build_release = ${{ steps.commit.outputs.build_release }}
        echo tag = ${{ steps.get-latest-tag.outputs.tag }}
        echo new_version = ${{ steps.bump-semver.outputs.new_version }}
        echo hash = ${{ steps.commit.outputs.hash }}

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ steps.my-app.outputs.token }}
      with:   
        tag_name: '${{ steps.bump-semver.outputs.new_version}}'
        release_name: 'Release v${{ steps.bump-semver.outputs.new_version }}'
        draft: false
        prerelease: false
        body: ${{ steps.read_commit_notes.outputs.commit_notes }}
        commitish: ${{ steps.commit.outputs.hash }}
      if: ${{steps.commit.outputs.build_release == 'true'}}